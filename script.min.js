let currentImageIndex=0;let activeTag='all';document.addEventListener('DOMContentLoaded',function(){const gallery=document.querySelector('.gallery');if(gallery){initializeGallery(gallery,{columns:{xs:1,sm:2,md:3,lg:3,xl:3},lightBox:!0,lightboxId:'myAwesomeLightbox',showTags:!0,tagsPosition:'top'})}});function initializeGallery(gallery,options){const tagsCollection=new Set();createRowWrapper(gallery);if(options.lightBox){createLightBox(gallery,options.lightboxId)}
const galleryItems=gallery.querySelectorAll('.gallery-item');galleryItems.forEach((item)=>{responsiveImageItem(item);moveItemInRowWrapper(gallery,item);wrapItemInColumn(item,options.columns);const theTag=item.getAttribute('data-gallery-tag');if(options.showTags&&theTag&&!tagsCollection.has(theTag)){tagsCollection.add(theTag)}});if(options.showTags){showItemTags(gallery,options.tagsPosition,Array.from(tagsCollection))}
galleryItems.forEach(item=>{item.addEventListener('click',function(){if(options.lightBox&&this.tagName==='IMG'){openLightBox(this,options.lightboxId)}})});gallery.style.display='block'}
function createRowWrapper(element){const firstChild=element.firstElementChild;if(!firstChild||!firstChild.classList.contains('row')){const rowWrapper=document.createElement('div');rowWrapper.classList.add('gallery-items-row','row');element.appendChild(rowWrapper)}}
function wrapItemInColumn(element,columns){const column=document.createElement('div');column.classList.add('item-column','mb-4');if(typeof columns==='object'){if(columns.xs)column.classList.add(`col-${Math.ceil(12 / columns.xs)}`);if(columns.sm)column.classList.add(`col-sm-${Math.ceil(12 / columns.sm)}`);if(columns.md)column.classList.add(`col-md-${Math.ceil(12 / columns.md)}`);if(columns.lg)column.classList.add(`col-lg-${Math.ceil(12 / columns.lg)}`);if(columns.xl)column.classList.add(`col-xl-${Math.ceil(12 / columns.xl)}`);}else if(typeof columns==='number'){column.classList.add(`col-${Math.ceil(12 / columns)}`)}else{console.error(`Les colonnes doivent Ãªtre un nombre ou un objet.`)}
element.parentElement.insertBefore(column,element);column.appendChild(element)}
function moveItemInRowWrapper(gallery,item){const rowWrapper=gallery.querySelector('.gallery-items-row');rowWrapper.appendChild(item)}
function responsiveImageItem(element){if(element.tagName==='IMG'){element.classList.add('img-fluid')}}
function createLightBox(gallery,lightboxId){const lightbox=document.createElement('div');lightbox.id=lightboxId||'galleryLightbox';lightbox.classList.add('modal','fade');lightbox.innerHTML=`
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="mg-prev" style="cursor:pointer;position:absolute;top:50%;left:-15px;background:white;">&lt;</div>
                    <img class="lightboxImage img-fluid" alt="Image Lightbox">
                    <div class="mg-next" style="cursor:pointer;position:absolute;top:50%;right:-15px;background:white;">&gt;</div>
                </div>
            </div>
        </div>
    `;document.body.appendChild(lightbox);const prevButton=lightbox.querySelector('.mg-prev');const nextButton=lightbox.querySelector('.mg-next');prevButton.addEventListener('click',function(){showPrevImage(gallery)});nextButton.addEventListener('click',function(){showNextImage(gallery)})}
function openLightBox(element,lightboxId){const lightboxImage=document.querySelector(`#${lightboxId} .lightboxImage`);const images=Array.from(document.querySelectorAll('.gallery-item')).filter(item=>activeTag==='all'||item.getAttribute('data-gallery-tag')===activeTag);currentImageIndex=images.indexOf(element);lightboxImage.src=element.src;const modal=new bootstrap.Modal(document.getElementById(lightboxId));modal.show()}
function showPrevImage(gallery){const images=Array.from(gallery.querySelectorAll('.gallery-item')).filter(item=>activeTag==='all'||item.getAttribute('data-gallery-tag')===activeTag);currentImageIndex=(currentImageIndex>0)?currentImageIndex-1:images.length-1;const prevImage=images[currentImageIndex];document.querySelector('.lightboxImage').src=prevImage.src}
function showNextImage(gallery){const images=Array.from(gallery.querySelectorAll('.gallery-item')).filter(item=>activeTag==='all'||item.getAttribute('data-gallery-tag')===activeTag);currentImageIndex=(currentImageIndex<images.length-1)?currentImageIndex+1:0;const nextImage=images[currentImageIndex];document.querySelector('.lightboxImage').src=nextImage.src}
function showItemTags(gallery,position,tags){const tagList=document.createElement('ul');tagList.classList.add('my-4','tags-bar','nav','nav-pills');const allTag=document.createElement('li');allTag.classList.add('nav-item');allTag.innerHTML=`<span class="nav-link active active-tag" data-images-toggle="all">Tous</span>`;tagList.appendChild(allTag);tags.forEach(tag=>{const tagItem=document.createElement('li');tagItem.classList.add('nav-item');tagItem.innerHTML=`<span class="nav-link" data-images-toggle="${tag}">${tag}</span>`;tagList.appendChild(tagItem)});if(position==='top'){gallery.prepend(tagList)}else{gallery.append(tagList)}
tagList.querySelectorAll('.nav-link').forEach(link=>{link.addEventListener('click',function(){tagList.querySelectorAll('.nav-link').forEach(link=>{link.classList.remove('active')});this.classList.add('active');const selectedTag=this.getAttribute('data-images-toggle');filterByTag(selectedTag)})})}
function filterByTag(tag){activeTag=tag;document.querySelectorAll('.gallery-item').forEach(item=>{const parentColumn=item.closest('.item-column');if(tag==='all'||item.getAttribute('data-gallery-tag')===tag){parentColumn.style.display='block'}else{parentColumn.style.display='none'}})}